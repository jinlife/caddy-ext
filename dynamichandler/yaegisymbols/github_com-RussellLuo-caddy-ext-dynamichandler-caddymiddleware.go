// Code generated by 'yaegi extract github.com/RussellLuo/caddy-ext/dynamichandler/caddymiddleware'. DO NOT EDIT.

package yaegisymbols

import (
	"github.com/RussellLuo/caddy-ext/dynamichandler/caddymiddleware"
	"net/http"
	"reflect"
)

func init() {
	Symbols["github.com/RussellLuo/caddy-ext/dynamichandler/caddymiddleware/caddymiddleware"] = map[string]reflect.Value{
		// type definitions
		"Handler":     reflect.ValueOf((*caddymiddleware.Handler)(nil)),
		"HandlerFunc": reflect.ValueOf((*caddymiddleware.HandlerFunc)(nil)),
		"Middleware":  reflect.ValueOf((*caddymiddleware.Middleware)(nil)),

		// interface wrapper definitions
		"_Handler":    reflect.ValueOf((*_github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Handler)(nil)),
		"_Middleware": reflect.ValueOf((*_github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware)(nil)),
	}
}

// _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Handler is an interface wrapper for Handler type
type _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Handler struct {
	IValue     interface{}
	WServeHTTP func(a0 http.ResponseWriter, a1 *http.Request) error
}

func (W _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Handler) ServeHTTP(a0 http.ResponseWriter, a1 *http.Request) error {
	return W.WServeHTTP(a0, a1)
}

// _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware is an interface wrapper for Middleware type
type _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware struct {
	IValue     interface{}
	WCleanup   func() error
	WProvision func() error
	WServeHTTP func(a0 http.ResponseWriter, a1 *http.Request, a2 caddymiddleware.Handler) error
	WValidate  func() error
}

func (W _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware) Cleanup() error {
	return W.WCleanup()
}
func (W _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware) Provision() error {
	return W.WProvision()
}
func (W _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware) ServeHTTP(a0 http.ResponseWriter, a1 *http.Request, a2 caddymiddleware.Handler) error {
	return W.WServeHTTP(a0, a1, a2)
}
func (W _github_com_RussellLuo_caddy_ext_dynamichandler_caddymiddleware_Middleware) Validate() error {
	return W.WValidate()
}
